swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/NewResource"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users:
    x-swagger-router-controller: "User"
    get:
      tags:
      - "User"
      summary: "Consulta de usuarios"
      description: "Listado de todos los usuarios autorizados a utlizar el servicio"
      operationId: "usersGet"
      parameters: []
      responses:
        200:
          description: "Listado de usuarios"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        500:
          description: "Error interno del servidor"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
      - "User"
      summary: "Crear usuario"
      description: "Dar de alta un usario dandole asi permiso para utlizar el servicio"
      operationId: "usersPost"
      parameters:
      - in: "body"
        name: "user"
        description: "Usuario a dar de alta en el sistema"
        required: true
        schema:
          $ref: "#/definitions/NewUser"
      responses:
        201:
          description: "Usuario creado"
          schema:
            # a pointer to a definition
            $ref: "#/definitions/NewResource"
        500:
          description: "Error interno del servidor"
          schema:
            $ref: "#/definitions/Error"
  /users/{id}:
    x-swagger-router-controller: "User"
    get:
      tags:
      - "User"
      summary: "Usuario"
      description: "Usuario por identificador\n"
      operationId: "usersIdGet"
      parameters:
      - name: "id"
        in: "path"
        description: "identificador del usuario."
        required: true
        type: "string"
      responses:
        200:
          description: "Usuario por id."
          schema:
            $ref: "#/definitions/User"
        404:
          description: "Recurso no encontrado"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error interno del servidor"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "User"
      summary: "Usuario"
      description: "Usuario por identificador\n"
      operationId: "usersIdPut"
      parameters:
      - name: "id"
        in: "path"
        description: "identificador del usuario."
        required: true
        type: "string"
      - in: "body"
        name: "user"
        description: "Datos de usuario para actualizar"
        required: true
        schema:
          $ref: "#/definitions/UpdateUser"
      responses:
        200:
          description: "Usuario actualizado."
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Recurso no encontrado"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error interno del servidor"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "User"
      summary: "Usuario"
      description: "Usuario por identificador\n"
      operationId: "usersIdDelete"
      parameters:
      - name: "id"
        in: "path"
        description: "identificador del usuario."
        required: true
        type: "string"
      responses:
        200:
          description: "Usuario borrado."
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Recurso no encontrado"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Error interno del servidor"
          schema:
            $ref: "#/definitions/Error"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
        description: "identificador Ãºnico del usuario."
      name:
        type: "string"
        description: "Nombre de usuario."
      comment:
        type: "string"
        description: "Comentario acerca del usuario."
      deleted:
        type: "boolean"
        description: "Indica si se trata de un usuario ya eliminado o no."
  UpdateUser:
    type: "object"
    properties:
      comment:
        type: "string"
        description: "Comentario acerca del usuario."
  NewUser:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Nombre de usuario."
      comment:
        type: "string"
        description: "Comentario acerca del usuario."
  NewResource:
    required:
      - id
    properties:
      id:
        type: string
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
